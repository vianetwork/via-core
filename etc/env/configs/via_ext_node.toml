# Note: this file doesn't depend on `base` env and will not contain variables from there.
# All the variables must be provided explicitly.
# This is on purpose: if EN will accidentally depend on the main node env, it may cause problems.

database_url = "postgres://postgres:notsecurepassword@localhost/via_local_ext_node"
test_database_url = "postgres://postgres:notsecurepassword@localhost:5433/via_local_test_ext_node"
database_pool_size = 50
zksync_action = "dont_ask"

[en]
main_node_url = "https://sepolia.era.zksync.dev"
pruning_data_retention_hours = 1
snapshots_recovery_enabled = false
http_port = 3060
ws_port = 3061
prometheus_port = 3322
healthcheck_port = 3081
threads_per_server = 128
l2_chain_id = 25223
l1_chain_id = 11155111

req_entities_limit = 10000

state_cache_path = "./db/via_ext_node/state_keeper"
merkle_tree_path = "./db/via_ext_node/lightweight"
max_l1_batches_per_tree_iter = 20

eth_client_url = "https://ethereum-sepolia-rpc.publicnode.com"

api_namespaces = ["via", "eth", "web3", "net", "pubsub", "zks", "en", "debug"]

# Note:
# `bootloader_hash` and `default_aa_hash` are overridden from the `.init.env` values by `zk` tool.
bootloader_hash = "0x0100038581be3d0e201b3cc45d151ef5cc59eb3a0f146ad44f0f72abf00b594c"
default_aa_hash = "0x0100038dc66b69be75ec31653c64cb931678299b9b659472772b2550b703f41c"

# Should be the same as chain.state_keeper.fee_account_addr.
operator_addr = "0xde03a0B5963f75f1C8485B355fF6D30f3093BDE7"

[en.consensus]
config_path = "etc/env/en_consensus_config.yaml"
secrets_path = "etc/env/en_consensus_secrets.yaml"

[en.database]
long_connection_threshold_ms = 2000
slow_query_threshold_ms = 100

[en.snapshots.object_store]
bucket_base_url = "zksync-era-boojnet-external-node-snapshots"
mode = "FileBacked"
file_backed_base_path = "artifacts"
# ^ Intentionally set to coincide with main node's in order to read locally produced snapshots

[en.main_node]
url = "http://127.0.0.1:3050"

[en.gateway]
url = "http://127.0.0.1:3052"


[via_bridge]
# The bridge address
bridge_address = "bcrt1p3s7m76wp5seprjy4gdxuxrr8pjgd47q5s8lu9vefxmp0my2p4t9qh6s8kq"
# The verifiers public keys
verifiers_pub_keys = [
    "03d8e2443ef58aa80fb6256bf3b94d2ecf9117f19cb17661ec60ad35fd84ff4a8b",
    "02043f839b8ecd9ffd79f26ec7d05750555cd0d1e0777cfc84a29b7e38e6324662",
]

[via_genesis]
# The bootstraping inscriptions
bootstrap_txids = []

[via_btc_client]
# The btc client user.
rpc_user = "rpcuser"
# The btc client password.
rpc_password = "rpcpassword"
# Name of the used Bitcoin network
network = "regtest"
# The Bitcoin RPC URL.
rpc_url = "http://0.0.0.0:18443"
# External fee APIs
external_apis = ["https://mempool.space/testnet/api/v1/fees/recommended"]
# Fee strategies
fee_strategies = ["fastestFee"]
# Use RPC to get the fee rate
use_rpc_for_fee_rate = true

[via_btc_watch]
# The interval in milliseconds between btc sender cycles.
poll_interval = 5000
# The number of L1 block to mark the inscription as finalized. 
block_confirmations = 0
# Number of blocks that we should check when restarting the service.
btc_blocks_lag = 1000
# The starting L1 block number from which indexing begins.
start_l1_block_number = 1
# When set to true, the btc_watch starts indexing L1 blocks from the "start_l1_block_number".
restart_indexing = false

[rust]
# `RUST_LOG` environment variable for `env_logger`
# Here we use TOML multiline strings: newlines will be trimmed.
log = """\
warn,\
zksync_node_framework=info,\
zksync_node_consensus=info,\
zksync_consensus_bft=info,\
zksync_consensus_network=info,\
zksync_consensus_storage=info,\
zksync_commitment_generator=info,\
zksync_core=debug,\
zksync_dal=info,\
zksync_db_connection=info,\
zksync_health_check=debug,\
zksync_eth_client=info,\
zksync_state_keeper=info,\
zksync_node_sync=info,\
zksync_storage=info,\
zksync_metadata_calculator=info,\
zksync_merkle_tree=info,\
zksync_node_api_server=info,\
zksync_node_db_pruner=info,\
zksync_reorg_detector=info,\
via_consistency_checker=info,\
zksync_state=debug,\
zksync_utils=debug,\
zksync_types=info,\
zksync_web3_decl=debug,\
loadnext=info,\
vm=info,\
zksync_external_node=info,\
zksync_snapshots_applier=debug,\
"""

# `RUST_BACKTRACE` variable
backtrace = "full"
lib_backtrace = "1"
